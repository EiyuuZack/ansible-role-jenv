---
# No need for Java taps as of 2023, but keeping this just in case
# See https://github.com/orgs/Homebrew/discussions/2172#discussioncomment-1364523
# - name: Ensure AdoptOpenJDK/openjdk tap is tapped
#   homebrew_tap:
#     name: AdoptOpenJDK/openjdk
#     state: present

- name: Ensure jenv is installed
  homebrew:
    name: jenv
    state: present

# Back to Homebrew's OpenJDK (should never have left?) - no need for sudo shenanigans, but keeping this just in case
# - name: Ensure selected JDK versions are installed
#   block:
#     - name: Enable passwordless sudo
#       lineinfile:
#         path: /etc/sudoers
#         line: '{{ ansible_user }} ALL=(ALL) NOPASSWD: ALL'
#       become: yes
#     - homebrew_cask:
#         name: '{{ item.version }}'
#         state: present
#       with_items: '{{ jenv_jdks }}'
#   always:
#     - name: Disable passwordless sudo
#       lineinfile:
#         path: /etc/sudoers
#         line: '{{ ansible_user }} ALL=(ALL) NOPASSWD: ALL'
#         state: absent
#       become: yes

- name: Ensure selected JDK versions are installed
  - homebrew_cask:
      name: '{{ item.version }}'
      state: present
    with_items: '{{ jenv_jdks }}'

- name: 'Ensure {{ jenv_root }} directory is created'
  file:
    path: '{{ jenv_root }}'
    state: directory
    mode: 0755

- name: Ensure jenv is added to profile system-wide
  blockinfile:
    path: /etc/zprofile
    block: "{{ lookup('template', 'jenv.sh.j2') }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK -- JENV"
  become: yes

# Only needed for external JDK distros (e.g. adoptopenjdk, temurin)
# - name: Get available JDKs
#   shell: $SHELL -lc 'ls /Library/Java/JavaVirtualMachines/'
#   register: jdks
#   ignore_errors: yes
#   changed_when: False

# - name: Ensure JDKs are registered
#   shell: $SHELL -lc "jenv add /Library/Java/JavaVirtualMachines/{{ item }}/Contents/Home" # must use double quotes here
#   with_items: '{{ jdks.stdout_lines }}'
#   ignore_errors: yes
#   register: result
#   changed_when: "'already' not in result.stdout"
#   failed_when: "result.rc != 0 and 'already' not in result.stdout"

# For Homebrew built JDK distros (e.g. openjdk)
- name: Ensure JDKs are registered
  shell: $SHELL -lc "jenv add {{ jenv_homebrew_prefix }}/opt/{{ item }}/libexec/openjdk.jdk/Contents/Home" # must use double quotes here
  with_items: '{{ jenv_jdks }}'
  ignore_errors: yes
  register: result
  changed_when: "'already' not in result.stdout"
  failed_when: "result.rc != 0 and 'already' not in result.stdout"

- name: 'Ensure JDK {{ jenv_default_jdk }} is default'
  shell: $SHELL -lc 'jenv global {{ jenv_default_jdk|quote }}'

- name: Ensure shims are updated
  shell: $SHELL -lc 'jenv rehash'

- name: Ensure JAVA_HOME is exposed automatically
  shell: $SHELL -lc 'jenv enable-plugin export'
